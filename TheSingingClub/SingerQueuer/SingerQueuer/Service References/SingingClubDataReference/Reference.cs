//------------------------------------------------------------------------------
// <auto-generated>
//     This code was generated by a tool.
//     Runtime Version:4.0.30319.42000
//
//     Changes to this file may cause incorrect behavior and will be lost if
//     the code is regenerated.
// </auto-generated>
//------------------------------------------------------------------------------

namespace SingerQueuer.SingingClubDataReference {
    using System.Runtime.Serialization;
    using System;
    
    
    [System.Diagnostics.DebuggerStepThroughAttribute()]
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Runtime.Serialization", "4.0.0.0")]
    [System.Runtime.Serialization.DataContractAttribute(Name="SongItem", Namespace="http://schemas.datacontract.org/2004/07/WcfSingingClub")]
    [System.SerializableAttribute()]
    public partial class SongItem : object, System.Runtime.Serialization.IExtensibleDataObject, System.ComponentModel.INotifyPropertyChanged {
        
        [System.NonSerializedAttribute()]
        private System.Runtime.Serialization.ExtensionDataObject extensionDataField;
        
        [System.Runtime.Serialization.OptionalFieldAttribute()]
        private string ArtistField;
        
        [System.Runtime.Serialization.OptionalFieldAttribute()]
        private string DiskField;
        
        [System.Runtime.Serialization.OptionalFieldAttribute()]
        private string DuetArtistField;
        
        [System.Runtime.Serialization.OptionalFieldAttribute()]
        private string FilePathField;
        
        [System.Runtime.Serialization.OptionalFieldAttribute()]
        private string IsDuetField;
        
        [System.Runtime.Serialization.OptionalFieldAttribute()]
        private string IsHelperField;
        
        [System.Runtime.Serialization.OptionalFieldAttribute()]
        private string OneDriveField;
        
        [System.Runtime.Serialization.OptionalFieldAttribute()]
        private string TitleField;
        
        [global::System.ComponentModel.BrowsableAttribute(false)]
        public System.Runtime.Serialization.ExtensionDataObject ExtensionData {
            get {
                return this.extensionDataField;
            }
            set {
                this.extensionDataField = value;
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public string Artist {
            get {
                return this.ArtistField;
            }
            set {
                if ((object.ReferenceEquals(this.ArtistField, value) != true)) {
                    this.ArtistField = value;
                    this.RaisePropertyChanged("Artist");
                }
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public string Disk {
            get {
                return this.DiskField;
            }
            set {
                if ((object.ReferenceEquals(this.DiskField, value) != true)) {
                    this.DiskField = value;
                    this.RaisePropertyChanged("Disk");
                }
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public string DuetArtist {
            get {
                return this.DuetArtistField;
            }
            set {
                if ((object.ReferenceEquals(this.DuetArtistField, value) != true)) {
                    this.DuetArtistField = value;
                    this.RaisePropertyChanged("DuetArtist");
                }
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public string FilePath {
            get {
                return this.FilePathField;
            }
            set {
                if ((object.ReferenceEquals(this.FilePathField, value) != true)) {
                    this.FilePathField = value;
                    this.RaisePropertyChanged("FilePath");
                }
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public string IsDuet {
            get {
                return this.IsDuetField;
            }
            set {
                if ((object.ReferenceEquals(this.IsDuetField, value) != true)) {
                    this.IsDuetField = value;
                    this.RaisePropertyChanged("IsDuet");
                }
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public string IsHelper {
            get {
                return this.IsHelperField;
            }
            set {
                if ((object.ReferenceEquals(this.IsHelperField, value) != true)) {
                    this.IsHelperField = value;
                    this.RaisePropertyChanged("IsHelper");
                }
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public string OneDrive {
            get {
                return this.OneDriveField;
            }
            set {
                if ((object.ReferenceEquals(this.OneDriveField, value) != true)) {
                    this.OneDriveField = value;
                    this.RaisePropertyChanged("OneDrive");
                }
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public string Title {
            get {
                return this.TitleField;
            }
            set {
                if ((object.ReferenceEquals(this.TitleField, value) != true)) {
                    this.TitleField = value;
                    this.RaisePropertyChanged("Title");
                }
            }
        }
        
        public event System.ComponentModel.PropertyChangedEventHandler PropertyChanged;
        
        protected void RaisePropertyChanged(string propertyName) {
            System.ComponentModel.PropertyChangedEventHandler propertyChanged = this.PropertyChanged;
            if ((propertyChanged != null)) {
                propertyChanged(this, new System.ComponentModel.PropertyChangedEventArgs(propertyName));
            }
        }
    }
    
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.ServiceModel", "4.0.0.0")]
    [System.ServiceModel.ServiceContractAttribute(ConfigurationName="SingingClubDataReference.ISingingClubRestService")]
    public interface ISingingClubRestService {
        
        [System.ServiceModel.OperationContractAttribute(Action="http://tempuri.org/ISingingClubRestService/XMLData", ReplyAction="http://tempuri.org/ISingingClubRestService/XMLDataResponse")]
        SingerQueuer.SingingClubDataReference.SongItem[] XMLData(string table, string action, string pageoffset, string pagereturn, string pageorderby, string pagewhereclause);
        
        [System.ServiceModel.OperationContractAttribute(Action="http://tempuri.org/ISingingClubRestService/XMLData", ReplyAction="http://tempuri.org/ISingingClubRestService/XMLDataResponse")]
        System.Threading.Tasks.Task<SingerQueuer.SingingClubDataReference.SongItem[]> XMLDataAsync(string table, string action, string pageoffset, string pagereturn, string pageorderby, string pagewhereclause);
        
        [System.ServiceModel.OperationContractAttribute(Action="http://tempuri.org/ISingingClubRestService/JSONData", ReplyAction="http://tempuri.org/ISingingClubRestService/JSONDataResponse")]
        string JSONData(string table, string action, string pageoffset, string pagereturn, string pageorderby, string pagewhereclause);
        
        [System.ServiceModel.OperationContractAttribute(Action="http://tempuri.org/ISingingClubRestService/JSONData", ReplyAction="http://tempuri.org/ISingingClubRestService/JSONDataResponse")]
        System.Threading.Tasks.Task<string> JSONDataAsync(string table, string action, string pageoffset, string pagereturn, string pageorderby, string pagewhereclause);
    }
    
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.ServiceModel", "4.0.0.0")]
    public interface ISingingClubRestServiceChannel : SingerQueuer.SingingClubDataReference.ISingingClubRestService, System.ServiceModel.IClientChannel {
    }
    
    [System.Diagnostics.DebuggerStepThroughAttribute()]
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.ServiceModel", "4.0.0.0")]
    public partial class SingingClubRestServiceClient : System.ServiceModel.ClientBase<SingerQueuer.SingingClubDataReference.ISingingClubRestService>, SingerQueuer.SingingClubDataReference.ISingingClubRestService {
        
        public SingingClubRestServiceClient() {
        }
        
        public SingingClubRestServiceClient(string endpointConfigurationName) : 
                base(endpointConfigurationName) {
        }
        
        public SingingClubRestServiceClient(string endpointConfigurationName, string remoteAddress) : 
                base(endpointConfigurationName, remoteAddress) {
        }
        
        public SingingClubRestServiceClient(string endpointConfigurationName, System.ServiceModel.EndpointAddress remoteAddress) : 
                base(endpointConfigurationName, remoteAddress) {
        }
        
        public SingingClubRestServiceClient(System.ServiceModel.Channels.Binding binding, System.ServiceModel.EndpointAddress remoteAddress) : 
                base(binding, remoteAddress) {
        }
        
        public SingerQueuer.SingingClubDataReference.SongItem[] XMLData(string table, string action, string pageoffset, string pagereturn, string pageorderby, string pagewhereclause) {
            return base.Channel.XMLData(table, action, pageoffset, pagereturn, pageorderby, pagewhereclause);
        }
        
        public System.Threading.Tasks.Task<SingerQueuer.SingingClubDataReference.SongItem[]> XMLDataAsync(string table, string action, string pageoffset, string pagereturn, string pageorderby, string pagewhereclause) {
            return base.Channel.XMLDataAsync(table, action, pageoffset, pagereturn, pageorderby, pagewhereclause);
        }
        
        public string JSONData(string table, string action, string pageoffset, string pagereturn, string pageorderby, string pagewhereclause) {
            return base.Channel.JSONData(table, action, pageoffset, pagereturn, pageorderby, pagewhereclause);
        }
        
        public System.Threading.Tasks.Task<string> JSONDataAsync(string table, string action, string pageoffset, string pagereturn, string pageorderby, string pagewhereclause) {
            return base.Channel.JSONDataAsync(table, action, pageoffset, pagereturn, pageorderby, pagewhereclause);
        }
    }
}
